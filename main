-- Viewer
-- A comprehensive peripheral visualizer for Minecraft

-- Debug tool
local function logfile(input)
    if not fs.exists("/logs") then
        fs.makeDir("/logs")
    else
        local file = fs.open("/logs/viewer.log", "a")
        file.write("[Main] "..input.."\n")
        file.close()
    end
end

local function getSettings()
    -- Retrieve settings from saved file, or if none exists, create settings from default list
    if not fs.exists("settings") then
        -- Retrieve up to date settings from GitHub
        logfile("Main settings not found!")
        logfile("Using default settings; Running updater")
        shell.run("install")
    else
        logfile("Main settings found!")
    end
    -- Load settings
    os.loadAPI("settings")
    logfile("Main settings loaded")
end

local function getList()
    local pList = {}
    logfile(#peripheral.getNames().." available peripherals found:")
    for num,pName in ipairs(peripheral.getNames()) do
        local p = peripheral.wrap(pName)
        pList[num] = {
            name = pName,
            label = peripheral.getType(pName),
            methods = p.listMethods and p.listMethods() or "unknown",
            fluids = p.getTankInfo and p.getTankInfo("unknown") or "none",
            inventory = {
                name = p.getInventoryName and p.getInventoryName() or "none",
                max = p.getInventorySize and p.getInventorySize() or "none",
                stored = p.getAllStacks and p.getAllStacks() or "none"
                },
            energy = {
                max = p.getMaxEnergyStored and p.getMaxEnergyStored() or "none",
                stored = p.getEnergyStored and p.getEnergyStored() or "none"
                disk = p.getType(pName) == "disk" and {
                    label = p.getLabel(),
                    id = p.getID(),
                    isPresent = p.isPresent(),
                    hasData = p.hasData(),
                    hasAudio = p.hasAudio(),
                    songTitle = p.hasAudio() and p.getAudioTitle() or "none"
                    } or "none"
                -- Need to test if I can get file info from other computers, or at least from drives with floppies
                -- 
                -- 
                }
            }
        logfile("    Functions for '"..pName.."' loaded successfully!")
    end
    return pList
end
-------------------------
-- Main code execution --
-------------------------
-- Clear log files
if not fs.exists("/logs") then
    fs.mkdir("/logs")
else
    if fs.exists("/logs/viewer.log") then
        fs.delete ("/logs/viewer.log")
    end
end
-- Check for dependencies
if not http then
    logfile("HTTP API not enabled! Please enable the HTTP API in the ComputerCraft config file, or ask your server administrator to do so.")
    print("HTTP API not enabled! Please enable the HTTP API in\nthe ComputerCraft config file, or ask your server/nadministrator to do so.")
    return
end

-- Load bundled APIs
logfile("Reloading APIs")
os.unloadAPI("settings")
os.loadAPI("settings")
os.unloadAPI("gui")
os.loadAPI("gui")
logfile("Reloaded APIs successfully!")

----------------
-- DEBUG CODE --
----------------
gui.drawScreen(getList())
